/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    pair<int,bool> check(TreeNode *root)
    {
        pair<int,bool> s;
        if(root==NULL)
        {
            s.first=0;
            s.second=true;
            return s;
        }
        
        pair<int,bool> left=check(root->left);
        pair<int,bool> right=check(root->right);
        s.first=max(left.first,right.first)+1;
        if(abs(left.first-right.first)<=1&&left.second&&right.second)
        {
            s.second=true;
        }
        else
        {
            s.second=false;
        }
        return s;
    }
    bool isBalanced(TreeNode* root) {
       pair<int,bool> p=check(root);
        return p.second;
    }
};
