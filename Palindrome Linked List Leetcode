/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(head==NULL||head->next==NULL)
        {
            return true;
        }
        
        ListNode *fast=head;
        ListNode *slow=head;
        ListNode *prev=NULL;
        while(fast&&fast->next)
        {
            prev=slow;
            fast=fast->next->next;
            slow=slow->next;
        }
        ListNode *prev2=NULL;
        while(slow)
        {
            ListNode *n=slow->next;
            slow->next=prev2;
            prev2=slow;
            slow=n;
        }
        prev->next=prev2;
        fast=head;
        slow=head;
        while(fast&&fast->next)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        ListNode *slow2=slow;
        ListNode *temp=head;
        while(temp!=slow2)
        {
            if(temp->val!=slow->val)
                return false;
            
            temp=temp->next;
            slow=slow->next;
        }
        return true;
    }
};
