/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        queue<TreeNode*> q;
        vector<int> result;
        if(root==NULL)
        {
            return result;
        }
        
        q.push(root);
        while(!q.empty())
        {
            result.push_back(q.back()->val);
           for(int i=q.size();i>0;i--)
            {
                TreeNode *k=q.front();
                q.pop();
                if(k->left)
                    q.push(k->left);
                
                if(k->right)
                    q.push(k->right);
            }
        }
        return result;
    }
};
