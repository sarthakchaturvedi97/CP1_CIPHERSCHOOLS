/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int sum=0,carry=0;
        if(l1==NULL&&l2==NULL)
        {
            return NULL;
        }
        
        if(l1==NULL)
        {
            return l2;
        }
        
        if(l2==NULL)
        {
            return l1;
        }
        ListNode *result=new ListNode(INT_MIN);
        ListNode *result2=result;
        while(l1&&l2)
        {
            sum=(l1->val+l2->val+carry)%10;
            result->next=new ListNode(sum);
            carry=(l1->val+l2->val+carry)/10;
            l1=l1->next;
            l2=l2->next;
            result=result->next;
        }
        while(l1)
        {
            sum=(l1->val+carry)%10;
            result->next=new ListNode(sum);
            carry=(l1->val+carry)/10;
            l1=l1->next;
             result=result->next;
        }
        while(l2)
        {
            sum=(l2->val+carry)%10;
            result->next=new ListNode(sum);
            carry=(l2->val+carry)/10;
            l2=l2->next;
             result=result->next;
        }
        if(carry>0)
        {
            result->next=new ListNode(carry);
             result=result->next;
        }
        result->next=NULL;
        return result2->next;
    }
};
