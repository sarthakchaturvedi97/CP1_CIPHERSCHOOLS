/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    vector<int> nextLargerNodes(ListNode* head) {
        stack<int> s;
        vector<int> result;
        ListNode *curr=head;
        ListNode *prev=NULL;
        while(curr)
        {
            ListNode *n=curr->next;
            curr->next=prev;
            prev=curr;
            curr=n;
        }
        ListNode *p=prev;
        while(p)
        {
            while(!s.empty()&&s.top()<=p->val)
            {
                s.pop();
            }
            
            if(s.empty())
            {
                result.push_back(0);
            }
            else
                result.push_back(s.top());
            
            s.push(p->val);
            p=p->next;
        }
        reverse(result.begin(),result.end());
        return result;
    }
};
