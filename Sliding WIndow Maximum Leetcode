class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        vector<int> result;
        if(k==0)
        {
            return result;
        }
         priority_queue<pair<int, int>> q;
        for (int i = 0, n = nums.size(); i < n; i++) {
        while (!q.empty() && q.top().second <= i-k)
            q.pop();
        q.push(make_pair(nums[i],i));
        if (i >= k-1)
            result.push_back(q.top().first);
    }
    return result;
    }
};
