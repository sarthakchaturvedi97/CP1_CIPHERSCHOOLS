/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> result;
        vector<int> fin;
        if(root==NULL)
        {
            return result;
        }
        
        stack<TreeNode *> s1;
        stack<TreeNode *> s2;
        s1.push(root);
        while(!s1.empty()||!s2.empty())
        {
            while(!s1.empty())
            {
                TreeNode *ans=s1.top();
                s1.pop();
                fin.push_back(ans->val);
                if(ans->left)
                {
                    s2.push(ans->left);
                }
                
                if(ans->right)
                {
                    s2.push(ans->right);
                }
            }
            if(!fin.empty())
            result.push_back(fin);
            fin.clear();
            while(!s2.empty())
            {
                TreeNode *ans=s2.top();
                s2.pop();
                fin.push_back(ans->val);
                if(ans->right)
                {
                    s1.push(ans->right);
                }
                
                if(ans->left)
                {
                    s1.push(ans->left);
                }
                
            }
            if(!fin.empty())
            result.push_back(fin);
            fin.clear();
        }
        return result;
    }
};
